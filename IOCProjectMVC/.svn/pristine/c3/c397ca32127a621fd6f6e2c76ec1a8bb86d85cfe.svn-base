require([
    "esri/urlUtils",
    "esri/map",
    "esri/toolbars/navigation",
    "esri/dijit/BasemapToggle",
    "esri/dijit/OverviewMap",
    "esri/dijit/Legend",
    "esri/geometry/Extent",
    "esri/layers/GraphicsLayer",
    "esri/geometry/webMercatorUtils",
    "dojo/_base/array",
    "dojo/dom-construct",
    "dojo/dom",
    "dojo/on",
    "dojo/_base/declare",
    "esri/graphic",
    "esri/config",
    "esri/dijit/ElevationProfile",
    "esri/symbols/CartographicLineSymbol",
    "esri/units",
    "esri/Color",
    "esri/toolbars/draw",
    "dojo/parser",
    "dojo/domReady!"
], function (urlUtils, Map, Navigation, BasemapToggle, OverviewMap, Legend, Extent,
    GraphicsLayer, webMercatorUtils, array, domConstruct, dom, on, declare,Graphic, esriConfig, ElevationsProfileWidget, CartographicLineSymbol, Units, Color, Draw,parser
) {

    function initToolbar(toolName) {
        epWidget.clearProfile(); //Clear profile

        PropiedadesBathyTransects.map.graphics.clear();
        tb = new Draw(PropiedadesBathyTransects.map);
        tb.on("draw-end", addGraphic);
        tb.activate(toolName);
        PropiedadesBathyTransects.map.disableMapNavigation();
    }
    function addGraphic(evt) {
        //deactivate the toolbar and clear existing graphics
        tb.deactivate();
        PropiedadesBathyTransects.map.enableMapNavigation();
        var symbol = lineSymbol;
        PropiedadesBathyTransects.map.graphics.add(new Graphic(evt.geometry, symbol));
        epWidget.set("profileGeometry", evt.geometry);

        var sel = dom.byId("unitsSelect");
        if (sel) {
            var val = sel.options[sel.selectedIndex].value;
            epWidget.set("measureUnits", val);
        }
    }
    function init() {
        var eleList = ["Polyline", "FreehandPolyline"];
        for (var ele in eleList) {
            on(dom.byId(eleList[ele]), "click", function (evt) {
                initToolbar(evt.target.id.toLowerCase());
            });
        }

        on(dom.byId("unitsSelect"), "change", function (evt) {
            if (epWidget) {
                epWidget.set("measureUnits", evt.target.options[evt.target.selectedIndex].value);
            }
        })

        // lineSymbol used for freehand polyline and line.
        lineSymbol = new CartographicLineSymbol(
                CartographicLineSymbol.STYLE_SOLID,
                new Color([255, 0, 0]), 2,
                CartographicLineSymbol.CAP_ROUND,
                CartographicLineSymbol.JOIN_MITER, 2
        );
        debugger;
        var profileParams = {
            map: PropiedadesBathyTransects.map,
            profileTaskUrl: "https://elevation.arcgis.com/arcgis/rest/services/Tools/ElevationSync/GPServer",
            scalebarUnits: Units.MILES
        };
        epWidget = new ElevationsProfileWidget(profileParams, dom.byId("profileChartNode"));
        epWidget.startup();
    };



    var PropiedadesBathyTransects = new Object();
    PropiedadesBathyTransects.VariablesGlobales = ['map', 'startExtent', 'unitSelected'];

    cargarvariablesGlobales();

    function cargarvariablesGlobales() {
        $.each(PropiedadesBathyTransects.VariablesGlobales, function (index, value) {
            PropiedadesBathyTransects[value] = undefined;
        });
    }

    //Ajusto el tamaño del panel donde va el mapa
    var height = ((this.window.innerHeight > 0) ? this.window.innerHeight : this.screen.height) - 170;
    $("#mapDiv").css("min-height", (height) + "px");

    //#region Combox
    PropiedadesBathyTransects.Units = [
        { id: "esriNauticalMiles", text: "Nautical Miles" },
        { id: "esriKilometers", text: "Kilometers" },
        { id: "esriMiles", text: "Miles" },
        { id: "esriMeters", text: "Meters" },
        { id: "esriYards", text: "Yards" }
    ];


   
    esriConfig.defaults.io.proxyUrl = "../proxy/asp/proxy.ashx";
    //parser.parse();

    //Variable con la extensión inicial del mapa 
    PropiedadesBathyTransects.startExtent = new Extent(-50, 12, 0, 41, new esri.SpatialReference({ wkid: 4326 }));

    PropiedadesBathyTransects.map = new Map("mapDiv", {
        extent: PropiedadesBathyTransects.startExtent,
        center: [-20, 26],
        basemap: "oceans",
        logo: false
    });

    //#region Maxima extensión del mapa
    var navToolbar = new Navigation(PropiedadesBathyTransects.map);
    //Constreñimos la extensión del mapa a la inicial por medio del evento onextentchange.
    on(PropiedadesBathyTransects.map, "extent-change", function (extent) {
        var buffer = 20; //En mi caso 1 grado
        // set costraint extent to initExtent +buffer
        var constraintExtent = new esri.geometry.Extent(PropiedadesBathyTransects.startExtent.xmin - buffer, PropiedadesBathyTransects.startExtent.ymin - buffer, PropiedadesBathyTransects.startExtent.xmax + buffer, PropiedadesBathyTransects.startExtent.ymax + buffer);
        if (!constraintExtent.contains(extent.extent) || !constraintExtent.intersects(extent.extent)) {
            // zoom back to previous extent
            navToolbar.zoomToPrevExtent();
        }
    });

    init.call(this);

    //#endregion


    //#endregion
});